import java.text.SimpleDateFormat

plugins {
    id 'org.jetbrains.changelog' version '1.3.1'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.jetbrains.changelog'

group 'dk.sunepoulsen.tes'

def versionPropertyName = "${rootProject.name}.version"
version "${project.property(versionPropertyName)}"

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    // Lombok
    compileOnly "org.projectlombok:lombok:${project.property('lombok.version')}"
    annotationProcessor "org.projectlombok:lombok:${project.property('lombok.version')}"

    // Logging
    implementation "ch.qos.logback:logback-classic:${project.property('logback.version')}"
    implementation "org.slf4j:log4j-over-slf4j:${project.property('log4j-over-slf4j.version')}"

    // JUnit
    testImplementation "junit:junit:${project.property('junit.version')}"

    // Spock
    testImplementation "org.codehaus.groovy:groovy:2.5.12"
    testImplementation "org.spockframework:spock-core:${project.property('spock-core.version')}"
    testImplementation "cglib:cglib-nodep:${project.property('cglib-nodep.version')}"
    testImplementation "org.objenesis:objenesis:${project.property('objenesis.version')}"
}

task allWrappers(type: Wrapper) {
    gradleVersion = "${project.property('gradle.version')}"
}

changelog {
    path = "${project.projectDir}/CHANGELOG.md"
    header = "${-> version.get()} - ${new SimpleDateFormat("yyyy-MM-dd").format(new Date())}"
    headerParserRegex = ~/(\d+\.\d+\.\d+.+)/
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "Unreleased work"
    groups = ["Features", "Fixed", "Security"]
}
